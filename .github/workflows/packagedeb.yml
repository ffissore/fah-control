# This workflow will install Python dependencies, run tests and lint with a variety of Python versions
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-python-with-github-actions

name: Python package

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [macos-10.15]
        python-version: [3.8]

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: versions
        run: pip --version

      - name: Install linux dependencies
        if: startsWith(matrix.os, 'ubuntu')
        run: |
          sudo apt-get install python3-all debhelper python3-setuptools devscripts

      - name: Install macos dependencies
        if: startsWith(matrix.os, 'macos')
        run: |
          brew install gtk+3 pygobject3

      - name: Install python dependencies
        run: |
          python -m pip install --upgrade pip
          pip install setuptools PyGObject

      - name: Install linux python dependencies
        if: startsWith(matrix.os, 'ubuntu')
        run: |
          pip install stdeb

      - name: Install windows python dependencies
        if: startsWith(matrix.os, 'windows')
        run: |
          pip install cx_Freeze

      - name: Install macos python dependencies
        if: startsWith(matrix.os, 'macos')
        run: |
          pip install py2app pycairo

      - name: Build
        if: startsWith(matrix.os, 'ubuntu')
        run: |
          python3 setup.py --command-packages=stdeb.command sdist_dsc

      - name: Build
        if: startsWith(matrix.os, 'windows')
        run: |
          python setup.py build sdist

      - name: Build
        if: startsWith(matrix.os, 'macos')
        run: |
          python3 setup.py py2app

      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          path: ./dist/FAHControl*.tar.gz

      - name: inspect output
        run: find
